#---- Server configuration ----#
server.port=${SERVER_PORT:8081}

#-------Database connection properties------------#
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5433/dynamo_ai_db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:dynamo_ai_usr}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:dynamo123}
#-------------hibernate------------------#
spring.jpa.hibernate.ddl-auto=validate

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration

##-----------Swagger------------#
springdoc.api-docs.path=/api/api-docs
springdoc.swagger-ui.path=/api/swagger

#------------------AWS Configuration----------------#
aws.region=${AWS_REGION:}

#------------------AWS S3 Configuration----------------#
aws.s3-bucket=${AWS_S3_BUCKET_NAME:}
document.cdn-url=${DOCUMENT_CDN_URL:}

#-----------------Keycloak------------------#
keycloak.auth-server-url=${KEYCLOAK_AUTH_SERVER_URL:http://localhost:8080}
keycloak.realm=${KEYCLOAK_REALM:Test}
keycloak.service.account.client-id=${KEYCLOAK_SERVICE_ACCOUNT_CLIENT_ID:test_service}
keycloak.client-secret=${KEYCLOAK_CLIENT_SECRET:J4qxGbr74i6Q5RvQ1uJjXIvtVbE5gMKx}
keycloak.admin-username=${KEYCLOAK_ADMIN_USERNAME:admin}
keycloak.admin-password=${KEYCLOAK_ADMIN_PASSWORD:admin}

#--------------- Spring Security OAuth2 Keycloak configuration ----------------------#
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEY_CLOAK_JWT_SET_URI:${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/certs}
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEY_CLOAK_JWT_ISSUER_URI:${keycloak.auth-server-url}/realms/${keycloak.realm}}

#-------------- Spring Web Pageable configuration ------------#
spring.data.web.pageable.size-parameter=page-size
spring.data.web.pageable.page-parameter=page-no
spring.data.web.pageable.default-page-size=12
spring.data.web.pageable.one-indexed-parameters=false
spring.data.web.pageable.max-page-size=16
spring.data.web.pageable.qualifier-delimiter=,

#------- Dynamo Auth configuration ------------#
dynamo.auth.http.allowed-endpoints=${DYNAMO_AUTH_HTTP_ALLOWED_ENDPOINTS:/,/camunda-welcome/**,/camunda/**,/actuator/health,/api/api-docs/**,/api/swagger-ui/**,/api/swagger/**,/camunda/**,/api/service/user-management/users/account-setup/**,/api/**,/api/patient/**}
dynamo.auth.cors.allowed-origins=${DYNAMO_AUTH_CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001,http://localhost:3002,http://localhost:3003,http://192.168.29.17:3000,http://192.168.29.17:3001,http://192.168.29.17:3002}
dynamo.auth.cors.allowed-methods=${DYNAMO_AUTH_CORS_ALLOWED_METHODS:GET,POST,OPTIONS,DELETE,PUT}
dynamo.auth.cors.allowed-headers=${DYNAMO_AUTH_CORS_ALLOWED_HEADERS:Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Max-Age,Content-Type,Access-Control-Request-Headers,Authorization,Origin,accept}
dynamo.auth.cors.exposed-headers=${DYNAMO_AUTH_CORS_EXPOSED_ORIGINS:*}
dynamo.auth.http.jwt-token.user-claim=${DYNAMO_AUTH_HTTP_JWT_TOKEN_USER_CLAIM:sub}
dynamo.auth.http.jwt-token.authorities-claim=${DYNAMO_AUTH_HTTP_JWT_TOKEN_AUTHORITIES_CLAIM:}

#------- Spring Boot Actuator configuration ------------#
management.endpoints.web.exposure.include=health

#-----------Cache Heap Size------------#
cache.heap-size=${CACHE_HEAP_SIZE:512}

##-------------Multipart File Config-------------##
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB

#--------------------OpenAI Configuration-----------------#
spring.ai.openai.api-key=${OPENAI_API_KEY:}
spring.ai.openai.chat.options.model=${OPENAI_CHAT_MODEL:}
spring.ai.openai.embedding.options.model=${OPENAI_EMBEDDING_MODEL:text-embedding-ada-002}
#--------------------TokenTextSplitter Configuration-----------------#
token-text-splitter.default-chunk-size=${DEFAULT_CHUNK_SIZE:8000}
token-text-splitter.min-chunk-size-chars=${MIN_CHUNK_SIZE_CHARS:350}
token-text-splitter.min-chunk-length-to-embed=${MIN_CHUNK_LENGTH_TO_EMBED:5}
token-text-splitter.max-num-chunks=${MAX_NUM_CHUNKS:10000}

